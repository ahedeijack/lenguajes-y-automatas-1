
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author betto
 */



public class JFramePrincipal extends javax.swing.JFrame {

    Expreg expresion = new Expreg();
    /**
     * Creates new form JFramePrincipal
     */
    public JFramePrincipal() {
        initComponents();
    }
    
    
    public void resultado(boolean resultado, int index){
        String validacion;
        
        if (resultado) {
            JOptionPane.showMessageDialog(this, jTextCadena.getText()+", tiene formato minimo de la opción "+index);
            jtextResultado.setText(jTextCadena.getText() + "TIENE FORMATO VALIDO");
        }  else {
            JOptionPane.showMessageDialog(this, jTextCadena.getText()+", no tiene formato minimo de la opción "+index);
            jtextResultado.setText(jTextCadena.getText() + "TIENE FORMATO INVALIDO");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextCadena = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jComboSel = new javax.swing.JComboBox<>();
        jtextResultado = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Validación de cadenas ");
        setAlwaysOnTop(true);
        setResizable(false);

        jTextCadena.setFont(new java.awt.Font("Roboto Medium", 0, 14)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Roboto Thin", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("VERIFICACIÓN DE CADENAS");

        jLabel2.setFont(new java.awt.Font("Roboto Medium", 0, 14)); // NOI18N
        jLabel2.setText("INGRESA TU TEXTO A VALIDAR");

        jComboSel.setFont(new java.awt.Font("Roboto Medium", 0, 12)); // NOI18N
        jComboSel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Número Entero", "Número Negativo", "Número de Control", "Número de Control con formato", "Número negativo", "Númereo positivo", "Número normal", "Nombre con inicial mayúscula (Pattern)", "Nombre con inicial mayúscula (Matches)", "Cadena de 5 a 10 caracteres", "Sistema Binario ", "Sistema Hexadecimal ", "CURP", "RFC", " " }));
        jComboSel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jComboSel.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboSelItemStateChanged(evt);
            }
        });

        jtextResultado.setFont(new java.awt.Font("Roboto Medium", 0, 14)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 672, Short.MAX_VALUE)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jComboSel, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextCadena))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jtextResultado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jComboSel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextCadena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jtextResultado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboSelItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboSelItemStateChanged
        // TODO add your handling code here:
        
        String cadena = (String)jTextCadena.getText();
        int seleccion = (int)jComboSel.getSelectedIndex();
        jtextResultado.setText("");
        boolean resultado;
        
        if (cadena.compareTo("") == 0) {
           JOptionPane.showMessageDialog(this, "La cadena esta vacía...");
        
        } else {    
            switch(seleccion){
                
                case 0:
                    resultado = expresion.validarNumeroEntero(cadena);
                break;
                   case 1:
                    resultado = expresion.validarNumeroEnteroNegativo(cadena);
                break;
                   case 2:
                    resultado = expresion.validarNumeroEnteroPositivo(cadena);
                break;
                   case 3:
                    resultado = expresion.validarNumeroControl(cadena);
                break;
                   case 4:
                    resultado = expresion.validarNumControl2020_2029(cadena);
                break;
                   case 5:
                    resultado = expresion.validarNumeroEnteroNegativo(cadena);
                break;
                   case 6:
                    resultado = expresion.validarNumeroEnteroPositivo(cadena);
                break;
                   case 7:
                    resultado = expresion.validarNumeroEntero(cadena);
                break;
                   case 8:
                    resultado = expresion.validarNombresMayIni_SeguidoMinus__pattern(cadena);
                break;
                   case 9:
                    resultado = expresion.validarNombresMayIni_SeguidoMinus__matches(cadena);
                break;
                   case 10:
                    resultado = expresion.validarCadena5a10(cadena);
                break;
                   case 11:
                    resultado = expresion.validarCadenaBin(cadena);
                break;
                   case 12:
                    resultado = expresion.validarCadenaHexa(cadena);
                break;
                   case 13:
                    resultado = expresion.validarCurp(cadena);
                break;
                case 14:
                    resultado = expresion.validarRfc(cadena);
                break;
                   default:
                       resultado = false;
                       break;
            }
            
                    resultado(resultado, seleccion);
            
        }
        
        /*        
 Número Entero
Número Negativo
Número de Control
Número de Control con formato
Número negativo
Númereo positivo
Número normal
Nombre con inicial mayúscula (Pattern)
Nombre con inicial mayúscula (Matches)
Cadena de 5 a 10 caracteres
Sistema Binario 
Sistema Hexadecimal 
CURP
RFC
*/
       
    }//GEN-LAST:event_jComboSelItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFramePrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> jComboSel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextCadena;
    private javax.swing.JLabel jtextResultado;
    // End of variables declaration//GEN-END:variables
}
